[paths]
train = C:\Users\eandrews\Personal\TP\spacy_testing\tok_spacy\corpus_train\train.spacy
dev = C:\Users\eandrews\Personal\TP\spacy_testing\tok_spacy\corpus_dev\dev.spacy
vectors = C:\Users\eandrews\Personal\TP\spacy_testing\tok_spacy\nimi2vec-main\nimi2vec-main\models\vectors_model
patterns = C:\Users\eandrews\Personal\TP\spacy_testing\tok_spacy\patterns_out.jsonl

[system]
gpu_allocator = null
seed = 0

[nlp]
lang = tok
pipeline = ["tok2vec", "tagger", "parser", "entity_ruler"]  
tokenizer = {"@tokenizers": "tokipona_tokenizer"}  
batch_size = 1000
  
[model]  
@architectures = "spacy.TaggerParserEntityRuler.v1"

[components]

[components.parser]
factory = "parser"
learn_tokens = false
min_action_freq = 30
moves = null
scorer = {"@scorers":"spacy.parser_scorer.v1"}
update_with_oracle_cut_size = 100

[components.parser.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "parser"
extra_state_tokens = false
hidden_width = 128
maxout_pieces = 3
use_upper = true
nO = null

[components.parser.model.tok2vec]
@architectures = "spacy.Tok2VecListener.v1"
width = ${components.tok2vec.model.encode.width}
upstream = "*"

[components.tagger]
factory = "tagger"

[components.tagger.model]
@architectures = "spacy.Tagger.v2"
nO = null
normalize = false

[components.tok2vec]
factory = "tok2vec"

[components.tok2vec.model]
@architectures = "spacy.Tok2Vec.v2"

[components.tok2vec.model.embed]
@architectures = "spacy.MultiHashEmbed.v2"
width = ${components.tok2vec.model.encode.width}
attrs = ["NORM","PREFIX","SUFFIX","SHAPE"]
rows = [5000,5000,2000,1000]
include_static_vectors = true

[components.tok2vec.model.encode]
@architectures = "spacy.MaxoutWindowEncoder.v2"
width = 96
depth = 4
window_size = 1
maxout_pieces = 3
  
[components.entity_ruler]  
factory = "entity_ruler"

[corpora]

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
max_length = 0

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
max_length = 0

[training]
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"
seed = ${system.seed}
gpu_allocator = ${system.gpu_allocator}
dropout = 0.1
accumulate_gradient = 1
patience = 1600
max_epochs = 0
max_steps = 2000
eval_frequency = 200
frozen_components = []
annotating_components = []
before_to_disk = null
before_update = null

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2
get_length = null

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001
t = 0.0

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"
progress_bar = false

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
use_averages = false
eps = 0.00000001
learn_rate = 0.001

[training.score_weights]
ents_f = 0.33
ents_p = 0.0
ents_r = 0.0
ents_per_type = null
tag_acc = 0.33
dep_uas = 0.17
dep_las = 0.17
dep_las_per_type = null
sents_p = null
sents_r = null
sents_f = 0.0

[pretraining]

[initialize]  
vectors = ${paths.vectors}  
  
[initialize.components]  
  
[initialize.components.entity_ruler]
[initialize.components.entity_ruler.patterns]
@readers = "srsly.read_jsonl.v1"
path = ${paths.patterns}